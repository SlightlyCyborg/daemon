(ns dameon.eyes.core
  (require [quil.core :as q]))

(import '[org.opencv.core MatOfInt MatOfByte Mat CvType Size]
        '[org.opencv.imgcodecs Imgcodecs]
        '[org.opencv.imgproc Imgproc]
        '[org.opencv.videoio VideoCapture Videoio])

(import 'java.nio.ByteBuffer)

(def video-feed (VideoCapture. 0))


(def frame-ref (ref (Mat.)))
(def img (ref nil))


(defn toPImage [mat]
  (let [w (.width mat)
        h (.height mat)
        image (q/create-image w h :rgb)
        data8 (make-array Byte/TYPE (* w h 4))
        data32 (make-array Integer/TYPE (* w h))]
    (.get mat 0 0 data8)
    (.get (.asIntBuffer (. ByteBuffer wrap data8)) data32)
    (set! (.-pixels image) data32)
    image))

(defn setup [])

(defn draw  []
  (q/frame-rate 10)
  (let
      [new-frame
       (Mat.
        (int (.get video-feed (. Videoio CAP_PROP_FRAME_WIDTH)))
        (int (.get video-feed (. Videoio CAP_PROP_FRAME_HEIGHT)))
        CvType/CV_8UC4)]
       (.read video-feed new-frame)
   (q/image (toPImage frame) 0 0)))



(q/defsketch example                  ;; Define a new sketch named example
  :title "Rouge Eyes"                 ;; Set the title of the sketch
  :settings #(q/smooth 2)             ;; Turn on anti-aliasing
  :setup setup                        ;; Specify the setup fn
  :draw draw                          ;; Specify the draw fn
  :size [323 200])        







